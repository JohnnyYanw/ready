1、http协议的主要特点。
简单快速
灵活
无连接
无状态

2、http报文的组成部分。
请求报文：
请求行；
请求头,key/value结构；
隔行；
请求正文；

响应报文：
响应状态；
响应头;
隔行；
响应正文;

3、http方法。
get     //获取资源
post    //传输资源
put     //更新资源
delete  //删除资源
mata    //获得报文首部

5、get、post请求的区别？
1、get请求在回退时是无害的，post则会被重新请求。
2、get请求可以主动被浏览器缓存，post请求不可以、除非手动设置。
3、get请求有长度限制（一般在2kb），post请求则没有长度限制
4、get请求请求参数会暴露在url明文下。不能用来传递敏感信息。
5、get请求只能通过url编码，post请求支持多种编码格式。
6、参数数据类型，get只接受ASCII格式，post不限制数据类型。
7、get参数通过url传递，post则通过req.body。
8、get请求会被完整的保存在浏览器历史记录里，而post则不行。

6、http状态码。
2xx 代表请求接收通过，继续操作。
200 请求成功。
206 带有一个range头的get请求，服务器完成了它。

3xx 重定向，要完成该请求还要进一步操作。
301 所请求的页面永久化的移植转移到一个新的地址。
302 所请求的页面临时性的转移到一个新的地址。
304 客户端有缓冲文档并发出了一个条件性请求。服务端告诉用户，原来以前的缓冲文档可以使用。 

4xx 客户端错误
400 客户端请求有语法错误，不能被服务器所解析。
401 请求未被授权，这个状态代码必须和www-authenticate报头域一起使用
403 对被请求页面的访问被禁止。
404 服务器地址未找到。

5xx 服务端错误
500 服务器发生不可预期的错误原来的缓冲文档还可以使用。
503 请求未完成，服务器临时过载或当机，一段时间后可恢复正常。

7、什么是持久连接？
    http请求采用请求/应答模式，当使用普通模式，即非keep-alive模式时， 每个
服务器都需要重新建立一个连接。完成后即断开连接。
    keep-alive http1.1支持
    当使用keep-alive的时候，keep-alive功能使客户端到服务端的连接保持有效。
当出现对服务器的后续连接时，keep-alive避免了建立或者重复建立连接。

8、什么是管线化？
持久连接
请求>响应>请求>响应>请求>响应
管线化
请求>请求>请求>响应>响应>响应

概念：
1、管线化机制通过持久化连接完成，仅http1.1支持该技术。
2、只有get、meta请求可以使用管线化，对post请求有限制。
3、初次启动时不应该采用管线化机制，因为无法判断该请求的http版本。
4、管线化不会影响该请求响应回来的顺序。
